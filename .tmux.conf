# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change bind key to ctrl-a
unbind-key c-b
set-option -g prefix c-a

# Index starts from 1
set-option -g base-index 1
set-option -g pane-base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# History
set-option -g history-limit 102400

# Repeat time limit (ms)
# set-option -g repeat-time 500
set-option -sg escape-time 10

# 256-color terminal
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ',*256col*:Tc'

# Key binding in the status line (bind-key :)
set-option -g status-keys emacs

# Mouse
set-option -g mouse on

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# Copy-mode
set-window-option -g mode-keys vi

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix c
#bind-key c new-window -c "#{pane_current_path}"
bind-key c command-prompt -p "Name of new window: " "new-window -n '%%'"

# prefix ctrl-a
bind-key c-a last-window

# prefix a
bind-key a send-prefix

# prefix |
bind-key | split-window -h -c "#{pane_current_path}"

# prefix -
bind-key - split-window -c "#{pane_current_path}"

# prefix bottom
bind-key 0 split-window -l 10 -c "#{pane_current_path}"

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-

# Back and forth
bind-key bspace previous-window
bind-key space next-window
bind-key / next-layout # Overridden

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# bind-key -n 'C-l' run "~/.config/tmux/select-pane-or-clear"
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Pane-movement
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U
bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"

# copy-mode
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
    bind-key y send-keys C-l C-a \; run-shell 'sleep 0.25' \;\
    copy-mode \; send-keys -X begin-selection \;\
    send-keys -X -N 100 'cursor-down' \;\
    send-keys -X 'end-of-line' \;\
    send-keys -X 'previous-word' \;\
    send-keys -X 'next-word-end' \;\
    send-keys -X copy-pipe-and-cancel "pbcopy" \;\
    send-keys C-e \;\
    display-message "Line copied"

bind-key p paste-buffer

# Capture pane and open in Vim
bind-key C-c run 'FILE=/tmp/tmux-capture-$(date +%Y%m%d%H%M%S).txt; tmux capture-pane -J -S -102400 -p > $FILE; tmux new-window "nvim $FILE"'

# Clear scrollback buffer
bind-key C-l send-keys C-l \; clear-history

# Goyo
bind-key G set status

# ctrl+v to paste from clipboard
bind C-v run "tmux set-buffer \"$(pbcopy)\"; tmux paste-buffer"

# Selection with mouse should copy to clipboard right away, in addition to the default action.
unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | clip.exe > /dev/null"

# Middle click to paste from the clipboard
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(pbcopy)\"; tmux paste-buffer"


# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
bind-key -n 'M-t' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmuxwords.rb --all --scroll 1000 --min 5 | fzf --multi | paste -sd\\  -)\"'"

# fzf-locate (all)
bind-key -n 'M-`' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# select-pane (@george-b)
bind-key 0 run "tmux split-window -l 12 'bash -ci ftpane'"

# base 16 colors with nord mix onedark palatees
 base00=default   # - Black, Default background color
 base01='#3b4252' # - Black, lighter, pane number
 base02='#434c5e' # - Black, lighter, pane border
 base03='#abb2bf' # - Black, greyish, window title
 base04='#d8dee9' # - White
 base05='#e5e9f0' # - White, lighter
 base06='#eceff4' # - White, lighter
 base07='#56b6c2' # - Light Green, status date
 base08='#88c0d0' # - Light Blue, clock, active pane number
 base09='#61afef' # - Sky Blue, status battery
 base0A='#5e81ac' # - Dark Blue
 base0B='#e06c75' # - Red, status prefix highlight
 base0C='#d08770' # - Orange, tmux message
 base0D='#e5c07b' # - yellow, active window, status zoom
 base0E='#98c379' # - Green, status prefix off
 base0F='#c678dd' # - Purple, active border, session

# -- Colors --------------------------------------------------------------------

# pane border colors
set-window-option -g pane-active-border-style fg=$base09
set-window-option -g pane-border-style fg=$base02

# pane number display
#set-option -g display-panes-active-colour $base08
#set-option -g display-panes-colour $base01

# clock style
set-window-option -g clock-mode-colour $base08

# -- Status Bar ----------------------------------------------------------------

# status bar general styles
set -g status 'on'
set -g status-left-length 30
set -g status-right-length 150
set-option -g status-style fg=$base02,bg=$base00,default

# status bar window list style
set-window-option -g window-status-style fg=$base03,bg=$base00
set-window-option -g window-status-format " #I #W"
set-option -g status-interval 1

# active window title colors
set-window-option -g window-status-current-style fg=$base0D,bg=$base00
set-window-option -g window-status-current-format " #[bold]#W"

# message text style
set-option -g message-style bg=$base00,fg=$base0C

# right status style
set-option -g status-right ' #(date "+%a %b %d %H:%M")  '

set-option -g pane-border-status bottom
set-option -g pane-border-format "#{pane_index} #{pane_current_command}"
set-option -g pane-active-border-style fg=$base0B
set-option -g pane-border-style fg=$base03

